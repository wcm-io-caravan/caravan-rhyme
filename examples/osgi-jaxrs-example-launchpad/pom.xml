<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  wcm.io
  %%
  Copyright (C) 2021 wcm.io
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.wcm.caravan</groupId>
    <artifactId>io.wcm.caravan.rhyme.parent</artifactId>
    <version>1.1.1-SNAPSHOT</version>
    <relativePath>../../tooling/parent/pom.xml</relativePath>
  </parent>

  <artifactId>io.wcm.caravan.rhyme.examples.osgi-jaxrs-example-launchpad</artifactId>
  <version>1-SNAPSHOT</version>
  <packaging>slingstart</packaging>

  <name>Rhyme - OSGI/JAX-RS Integration Test Launchpad</name>
  <description>
    A Sling Launchpad instance provisioned with all dependencies required to run the osgi-jaxrs-example-service bundle
  </description>

  <properties>
    <!-- hostname and port for integration tests -->
    <test.host>localhost</test.host>
    <http.port>8080</http.port>

    <launchpad.http.server.url>http://${test.host}:${http.port}</launchpad.http.server.url>

    <!--
        Set this to true to stop mvn once the integration test Jetty instance is
        started. Useful to manually test the integration testing webapp.
    -->
    <launchpad.keep.running>false</launchpad.keep.running>

    <!--
      If set to "true" this will start the launchpad with standard debug options,
      or set to a string to provide custom debug settings
    -->
    <launchpad.debug>true</launchpad.debug>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.wcm.caravan</groupId>
      <artifactId>io.wcm.caravan.commons.httpclient</artifactId>
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>io.wcm.caravan</groupId>
      <artifactId>io.wcm.caravan.commons.httpasyncclient</artifactId>
      <version>1.2.0</version>
    </dependency>
    <dependency>
      <groupId>io.wcm.caravan</groupId>
      <artifactId>io.wcm.caravan.commons.jsonpath</artifactId>
      <version>0.5.0</version>
    </dependency>
    <dependency>
      <groupId>io.wcm.caravan</groupId>
      <artifactId>io.wcm.caravan.commons.metrics</artifactId>
      <version>0.6.0</version>
    </dependency>
    <dependency>
      <groupId>io.wcm.caravan</groupId>
      <artifactId>io.wcm.caravan.commons.performance</artifactId>
      <version>0.5.0</version>
    </dependency>
    <dependency>
      <groupId>io.wcm.caravan</groupId>
      <artifactId>io.wcm.caravan.hal.resource</artifactId>
      <version>1.1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm.caravan</groupId>
      <artifactId>io.wcm.caravan.rhyme.api-interfaces</artifactId>
      <version>1.1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm.caravan</groupId>
      <artifactId>io.wcm.caravan.rhyme.core</artifactId>
      <version>1.2.0-SNAPSHOT</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm.caravan</groupId>
      <artifactId>io.wcm.caravan.rhyme.osgi-jaxrs</artifactId>
      <version>1.1.1-SNAPSHOT</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm.caravan</groupId>
      <artifactId>io.wcm.caravan.rhyme.examples.osgi-jaxrs-example-service</artifactId>
      <version>1.0.0-SNAPSHOT</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm.caravan</groupId>
      <artifactId>io.wcm.caravan.io.http</artifactId>
      <version>0.10.0</version>
    </dependency>
    <dependency>
      <groupId>io.wcm.caravan</groupId>
      <artifactId>io.wcm.caravan.pipeline.api</artifactId>
      <version>0.7.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm.caravan</groupId>
      <artifactId>io.wcm.caravan.pipeline.impl</artifactId>
      <version>0.6.4</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm.caravan</groupId>
      <artifactId>io.wcm.caravan.pipeline.cache.guava</artifactId>
      <version>0.7.0</version>
    </dependency>

    <!-- Apache HTTP Client (version overrides are required by the io.wcm.caravan.io.http bundle) -->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.10</version><!--$NO-MVN-MAN-VER$-->
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>4.4.12</version><!--$NO-MVN-MAN-VER$-->
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient-osgi</artifactId>
      <version>4.5.10</version><!--$NO-MVN-MAN-VER$-->
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore-osgi</artifactId>
      <version>4.4.12</version><!--$NO-MVN-MAN-VER$-->
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpasyncclient-osgi</artifactId>
      <version>4.1.4</version><!--$NO-MVN-MAN-VER$-->
    </dependency>
    
    <!-- actual dependencies -->
    <dependency>
      <groupId>io.wcm.caravan</groupId>
      <artifactId>io.wcm.caravan.integration-test.minimal-launchpad</artifactId>
      <version>1.3.0-SNAPSHOT</version>
      <type>slingfeature</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm.osgi.wrapper</groupId>
      <artifactId>io.wcm.osgi.wrapper.hibernate-validator</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- AssertJ for fluent assertions -->
    <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>3.8.0</version>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <scope>test</scope>
    </dependency>
  </dependencies>
  
  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.sling</groupId>
        <artifactId>slingstart-maven-plugin</artifactId>
        <version>1.6.0</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>start-container</id>
            <goals>
              <goal>start</goal>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- configurations for the provisioning model are inlined here, because we want to use the maven properties for the server url -->
          <model>
[feature name=caravan-configuration]

[configurations]
  io.wcm.caravan.io.http.impl.CaravanHttpServiceConfig-localhost
    serviceId="localhost"
    ribbonHosts=["${launchpad.http.server.url}"]

[configurations]
  io.wcm.caravan.commons.httpclient.impl.HttpClientConfigImpl-localhost
    hostPatterns=["localhost"]
    maxConnectionsPerHost="5000"
    maxTotalConnections="5000"
          </model>
          <usePomDependencies>true</usePomDependencies>
          <usePomVariables>true</usePomVariables>
          <servers>
            <server>
              <port>${http.port}</port>
              <controlPort>${sling.control.port}</controlPort>
              <contextPath>${http.base.path}</contextPath>
              <debug>${launchpad.debug}</debug>
              <!-- override the vmOpts because the defaults contain XX:MaxPermSize which is no longer supported with Java 17 -->
              <vmOpts>-Xmx1024m -Djava.awt.headless=true<!--
              To enable the JaCoCo java-agent, we cannot use its maven plugin, since the launchpad java process is started from within the slingstart-maven-plugin.
              We have to manually construct the javaagent parameter here, and enable output of coverage data to a separate .exec file -->
              -javaagent:${settings.localRepository}/org/jacoco/org.jacoco.agent/${jacoco-maven-plugin.version}/org.jacoco.agent-${jacoco-maven-plugin.version}-runtime.jar=destfile=${project.build.directory}/jacoco-launchpad.exec
              </vmOpts>
            </server>
          </servers>
        </configuration>
      </plugin>

      <!-- expose the server base url as a single system property  -->
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <launchpad.http.server.url>${launchpad.http.server.url}</launchpad.http.server.url>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <!-- do not deploy into maven repository -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <!-- do not generate site for this project -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <configuration>
          <skip>true</skip>
          <skipDeploy>true</skipDeploy>
        </configuration>
      </plugin>
      
      <!-- do not generate javadocs -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      
    </plugins>
  </build>
  
  <profiles>

    <!-- "Fast" profile for quick compile of the project without any unit tests etc. -->
    <profile>
      <id>fast</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <unittests.skip>true</unittests.skip>
        <integrationtests.skip>true</integrationtests.skip>
        <maven.javadoc.skip>true</maven.javadoc.skip>
      </properties>
    </profile>

    <!-- Start on port 8080 and keep running -->
    <profile>
      <id>keep-running</id>
      <properties>
        <launchpad.keep.running>true</launchpad.keep.running>
        <launchpad.debug>true</launchpad.debug>
      </properties>
    </profile>
  </profiles>

</project>
