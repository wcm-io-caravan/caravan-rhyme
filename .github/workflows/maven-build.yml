# Build validation

name: Build

on:
  push:
    branches-ignore:
      - master
      - experimental/**
  pull_request:
    types: [opened, synchronize, reopened]
    branches-ignore:
      - master
      - experimental/**
  workflow_dispatch:

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        java: [8, 11, 17]
        os: [ubuntu-latest]
        distribution: [temurin]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java }}
          cache: 'maven'

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # install target is used rather than verify to ensure that modules from the main build are available for the examples builds
      - name: Build and install
        run: ./mvnw -s ./.maven-settings.xml -Pcontinuous-integration -B -U clean install

      - name: Analyze in SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        # SONAR_TOKEN is not present when building for external PR
        run:  ([ -z $SONAR_TOKEN ] || ./mvnw -s ./.maven-settings.xml -Pcontinuous-integration -B sonar:sonar -Dsonar.projectKey=${{github.repository_owner}}_${{github.event.repository.name}} -Dsonar.projectName=${{github.event.repository.name}})
        if: ${{ matrix.java == '11' && matrix.os == 'ubuntu-latest' }}
